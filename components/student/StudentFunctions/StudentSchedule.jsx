'use client';
import React, { useState, useEffect } from 'react';
import { api } from '@/lib/api';
import './StudentSchedule.css';

const StudentSchedule = () => {
  const [schedule, setSchedule] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  useEffect(() => {
    fetchSchedule();
  }, []);

  const fetchSchedule = async () => {
    setLoading(true);
    setError('');
    
    try {
      const response = await api.get('api/schedule');
      
      if (response.data.status) {
        setSchedule(response.data.schedule || []);
      } else {
        setError(response.data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è');
      }
    } catch (err) {
      setError(err.response?.data?.error || err.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
      console.error('–û—à–∏–±–∫–∞:', err);
    } finally {
      setLoading(false);
    }
  };

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
  const groupedSchedule = schedule.reduce((acc, lesson) => {
    const day = lesson.day_of_week;
    if (!acc[day]) {
      acc[day] = [];
    }
    acc[day].push(lesson);
    return acc;
  }, {});

  const daysOrder = [
    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', 
    '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
  ];

  const getDayColor = (dayIndex) => {
    const colors = [
      '#3498db', // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - —Å–∏–Ω–∏–π
      '#2ecc71', // –í—Ç–æ—Ä–Ω–∏–∫ - –∑–µ–ª–µ–Ω—ã–π
      '#e74c3c', // –°—Ä–µ–¥–∞ - –∫—Ä–∞—Å–Ω—ã–π
      '#f39c12', // –ß–µ—Ç–≤–µ—Ä–≥ - –æ—Ä–∞–Ω–∂–µ–≤—ã–π
      '#9b59b6', // –ü—è—Ç–Ω–∏—Ü–∞ - —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
      '#1abc9c', // –°—É–±–±–æ—Ç–∞ - –±–∏—Ä—é–∑–æ–≤—ã–π
      '#34495e'  // –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - —Ç–µ–º–Ω–æ-—Å–µ—Ä—ã–π
    ];
    return colors[dayIndex];
  };

  return (
    <div className="student-schedule">
      <div className="schedule-header">
        <h2>üìö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</h2>
        <p>–í–∞—à–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</p>
      </div>

      {/* Error */}
      {error && (
        <div className="error-message">
          ‚ö†Ô∏è {error}
        </div>
      )}

      {/* Loading */}
      {loading && (
        <div className="loading-container">
          <div className="spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...</p>
        </div>
      )}

      {/* Schedule Grid */}
      {!loading && (
        <div className="schedule-grid">
          {daysOrder.map((day, index) => (
            <div key={day} className="schedule-day">
              <div 
                className="day-header"
                style={{ backgroundColor: getDayColor(index) }}
              >
                <h3 className="day-title">{day}</h3>
                <span className="lesson-count">
                  {groupedSchedule[day]?.length || 0}
                </span>
              </div>
              
              <div className="lessons-list">
                {groupedSchedule[day]?.length > 0 ? (
                  groupedSchedule[day].map(lesson => (
                    <div key={lesson._id} className="lesson-card">
                      <div className="lesson-time">
                        {lesson.start_time} - {lesson.end_time}
                      </div>
                      <div className="lesson-content">
                        <h4 className="lesson-name">{lesson.lesson_name}</h4>
                        <p className="lesson-teacher">üë®‚Äçüè´ {lesson.teacher_name}</p>
                        <p className="lesson-location">üìç {lesson.location}</p>
                      </div>
                    </div>
                  ))
                ) : (
                  <div className="no-lessons">
                    <p>–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç</p>
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      )}

      {/* Refresh Button */}
      {!loading && (
        <div className="schedule-actions">
          <button 
            onClick={fetchSchedule}
            className="refresh-button"
          >
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
          </button>
        </div>
      )}
    </div>
  );
};

export default StudentSchedule;
